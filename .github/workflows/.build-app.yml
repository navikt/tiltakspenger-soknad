name: Build app

on:
  workflow_call:
    inputs:
      ENV:
        required: true
        type: string
      buildImage:
        required: false
        type: boolean
        default: true
    outputs:
      IMAGE:
        description: "Docker image"
        value: ${{ jobs.build.outputs.IMAGE }}
    secrets:
      NAIS_WORKLOAD_IDENTITY_PROVIDER:
        required: true
      READER_TOKEN:
        required: true
      SLACK_INCOMING_WEBHOOK_URL:
        required: true

jobs:
  build:
    name: Build app for (${{ inputs.ENV }})
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    outputs:
      IMAGE: ${{ steps.docker-push.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: "https://npm.pkg.github.com"

      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Copy env file
        run: cp .env.${{ inputs.ENV }} .env.production

      - name: Build app
        run: npm run build

      - name: Build and push docker image
        uses: nais/docker-build-push@v0
        if: inputs.buildImage == true
        id: docker-push
        with:
          team: tpts
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          image_suffix: ${{ inputs.ENV }}

      - name: Upload static files to NAV CDN
        uses: nais/deploy/actions/cdn-upload/v2@master
        if: inputs.ENV == 'prod'
        with:
          team: tpts
          source: ./.next/static
          destination: "/tiltakspenger-soknad/_next"
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

      - name: Notify Slack in case of build failure
        if: failure() && github.ref == 'refs/heads/main'
        run: |
          curl -X POST --data-urlencode "payload={ \"attachments\": [{ \"pretext\": \"[${{ github.event.repository.name }}] Build failed :cry:\", \"color\": \"danger\", \"fields\": [ { \"title\": \"Author\", \"value\": \"$AUTHOR\", \"short\": false }, { \"title\": \"Commit\", \"value\": \"<https://github.com/${{ github.repository }}/commit/$GITHUB_SHA|$GITHUB_SHA>\", \"short\": false } ] }] }" $WEBHOOK_URL
        env:
          BRANCH: ${{ github.ref }}
          AUTHOR: ${{ github.event.pusher.name }}
          WEBHOOK_URL: ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}
